service: celebnetwork-backend

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: ${env:NODE_ENV, 'production'}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    JWT_SECRET: ${env:JWT_SECRET}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - rds:*
          Resource: "*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  api:
    handler: src/lambda.handler
    events:
      - http:
          method: ANY
          path: /{proxy+}
          cors:
            origin: 
              - http://localhost:3000
              - https://celebnetwork.com
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          method: ANY
          path: /
          cors:
            origin: 
              - http://localhost:3000
              - https://celebnetwork.com
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

custom:
  serverless-offline:
    httpPort: 3001
    host: 0.0.0.0

package:
  exclude:
    - .git/**
    - .gitignore
    - README.md
    - .env.example
    - node_modules/.cache/**
